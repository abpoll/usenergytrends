msn_frame <- subset(cons_frame,grepl(msn, as.character(cons_frame$MSN)))
years <- msn_frame %>% distinct(Year)
#Create the string MSN-BaseYr-CompYr
comp <- paste(as.character(years[,1][1]), as.character(years[,1][2]), sep="-")
comp <- paste(msn, comp, sep=": ")
#Get perc. change for each state
perc_changes <- msn_frame %>% group_by(StateCode) %>% summarize(PercChange = pct(Data))
#TODO- string together the MSN code before Base-Comp Years
#Will have some type of mapping which will extract the string from msn
rename(perc_changes, Location=StateCode, PercentChange = PercChange)
perc_changes <- perc_changes %>% rowwise() %>% mutate(Comparison=comp)
return(perc_changes)
}
states.perc.change(stc_comp, "ARTCB")
states.perc.change <- function(cons_frame, msn){
#hold the string list of states, DC, and US
states <- as.character(unique(cons_frame$StateCode))
#subset the MSN values of interest from the dataframe
msn_frame <- subset(cons_frame,grepl(msn, as.character(cons_frame$MSN)))
years <- msn_frame %>% distinct(Year)
#Create the string MSN-BaseYr-CompYr
comp <- paste(as.character(years[,1][1]), as.character(years[,1][2]), sep="-")
comp <- paste(msn, comp, sep=" ")
#Get perc. change for each state
perc_changes <- msn_frame %>% group_by(StateCode) %>% summarize(PercChange = pct(Data))
#TODO- string together the MSN code before Base-Comp Years
#Will have some type of mapping which will extract the string from msn
rename(perc_changes, Location=StateCode, PercentChange = PercChange)
perc_changes <- perc_changes %>% rowwise() %>% mutate(Comparison=comp)
return(perc_changes)
}
states.perc.change(stc_comp, "ARTCB")
states.perc.change <- function(cons_frame, msn){
#hold the string list of states, DC, and US
states <- as.character(unique(cons_frame$StateCode))
#subset the MSN values of interest from the dataframe
msn_frame <- subset(cons_frame,grepl(msn, as.character(cons_frame$MSN)))
years <- msn_frame %>% distinct(Year)
#Create the string MSN-BaseYr-CompYr
comp <- paste(as.character(years[,1][1]), as.character(years[,1][2]), sep="-")
comp <- paste(msn, comp, sep="_")
#Get perc. change for each state
perc_changes <- msn_frame %>% group_by(StateCode) %>% summarize(PercChange = pct(Data))
#TODO- string together the MSN code before Base-Comp Years
#Will have some type of mapping which will extract the string from msn
rename(perc_changes, Location=StateCode, PercentChange = PercChange)
perc_changes <- perc_changes %>% rowwise() %>% mutate(Comparison=comp)
return(perc_changes)
}
states.perc.change(stc_comp, "ARTCB")
states.perc.change(stc_comp, "WYTCB")
debugSource('~/usenergytrends/workbooks/consumption/consumption.R')
states.perc.change(stc_comp, "WYTCB")
states.perc.change(stc_comp, "WYTCB")
msn_frame
library(tidyverse)
stc_comp$MSN
states.perc.change(stc_comp, 'WYTCP')
head(states.perc.change(stc_comp, 'WYTCP'))
head(stc_comp)
stc_comp[MSN=='WYTCP']
stc_comp[stc_comp$MSN=='WYTCP']
stc_comp[stc_comp$MSN=='WYTCB']
head(states.perc.change(stc_comp, 'WYTCB'))
(states.perc.change(stc_comp, 'WYTCB'))
states.perc.change(stc_comp, 'WYTCB') %>% filter(!is.nan(PercChange), is.finite(PercChange))
states.perc.change <- function(cons_frame, msn){
#hold the string list of states, DC, and US
states <- as.character(unique(cons_frame$StateCode))
#subset the MSN values of interest from the dataframe
msn_frame <- subset(cons_frame,grepl(msn, as.character(cons_frame$MSN)))
years <- msn_frame %>% distinct(Year)
#Create the string MSN-BaseYr-CompYr
comp <- paste(as.character(years[,1][1]), as.character(years[,1][2]), sep="-")
comp <- paste(msn, comp, sep="_")
#Get perc. change for each state
perc_changes <- msn_frame %>% group_by(StateCode) %>% summarize(PercChange = pct(Data))
#TODO- string together the MSN code before Base-Comp Years
#Will have some type of mapping which will extract the string from msn
rename(perc_changes, Location=StateCode, PercentChange = PercChange)
perc_changes <- perc_changes %>% rowwise() %>% mutate(Comparison=comp, Growth = diff(Data))
return(perc_changes)
}
(states.perc.change(stc_comp, 'WYTCB'))
states.perc.change <- function(cons_frame, msn){
#hold the string list of states, DC, and US
states <- as.character(unique(cons_frame$StateCode))
#subset the MSN values of interest from the dataframe
msn_frame <- subset(cons_frame,grepl(msn, as.character(cons_frame$MSN)))
years <- msn_frame %>% distinct(Year)
#Create the string MSN-BaseYr-CompYr
comp <- paste(as.character(years[,1][1]), as.character(years[,1][2]), sep="-")
comp <- paste(msn, comp, sep="_")
#Get perc. change for each state
perc_changes <- msn_frame %>% group_by(StateCode) %>% summarize(PercChange = pct(Data))
#TODO- string together the MSN code before Base-Comp Years
#Will have some type of mapping which will extract the string from msn
rename(perc_changes, Location=StateCode, PercentChange = PercChange)
perc_changes <- perc_changes %>% rowwise() %>% mutate(Comparison=comp, Growth = diff(msn_frame$Data))
return(perc_changes)
}
(states.perc.change(stc_comp, 'WYTCB'))
temp
temp %>% group_by(StateCode) %>% summarize(Change = diff(Data))
states.perc.change <- function(cons_frame, msn){
#hold the string list of states, DC, and US
states <- as.character(unique(cons_frame$StateCode))
#subset the MSN values of interest from the dataframe
msn_frame <- subset(cons_frame,grepl(msn, as.character(cons_frame$MSN)))
years <- msn_frame %>% distinct(Year)
#Create the string MSN-BaseYr-CompYr
comp <- paste(as.character(years[,1][1]), as.character(years[,1][2]), sep="-")
comp <- paste(msn, comp, sep="_")
#Get perc. change for each state
perc_changes <- msn_frame %>% group_by(StateCode) %>% summarize(PercentChange = pct(Data))
#Get diff. for each state
change <- msn_frame %>% group_by(StateCode) %>% summarize(Change = diff(Data))
#TODO- string together the MSN code before Base-Comp Years
#Will have some type of mapping which will extract the string from msn
rename(perc_changes, Location=StateCode)
perc_changes <- perc_changes %>% rowwise() %>% mutate(Comparison=comp)
return(perc_changes)
}
(states.perc.change(stc_comp, 'WYTCB'))
states.perc.change <- function(cons_frame, msn){
#hold the string list of states, DC, and US
states <- as.character(unique(cons_frame$StateCode))
#subset the MSN values of interest from the dataframe
msn_frame <- subset(cons_frame,grepl(msn, as.character(cons_frame$MSN)))
years <- msn_frame %>% distinct(Year)
#Create the string MSN-BaseYr-CompYr
comp <- paste(as.character(years[,1][1]), as.character(years[,1][2]), sep="-")
comp <- paste(msn, comp, sep="_")
#Get perc. change for each state
perc_change <- msn_frame %>% group_by(StateCode) %>% summarize(PercentChange = pct(Data))
#Get diff. for each state
change <- msn_frame %>% group_by(StateCode) %>% summarize(Change = diff(Data))
#Join together
perc_changes <- merge(perc_change, change)
#TODO- string together the MSN code before Base-Comp Years
#Will have some type of mapping which will extract the string from msn
rename(perc_changes, Location=StateCode)
perc_changes <- perc_changes %>% rowwise() %>% mutate(Comparison=comp)
return(perc_changes)
}
(states.perc.change(stc_comp, 'WYTCB'))
t = (states.perc.change(stc_comp, 'WYTCB'))
t %>% filter(!is.finite(PercentChange))
t %>% filter(!is.finite(PercentChange), !is.nan(PercentChange))
t %>% filter(is.nan(PercentChange))
temp
temp %>% filter(StateCode=='US')
which(temp$StateCode == 'US')
rbind(temp[!which(temp$StateCode == 'US'),], temp[which(temp$StateCode == 'US'),])
t
rbind(t[!which(temp$StateCode == 'US'),], t[which(temp$StateCode == 'US'),])
rbind(t[!which(t$StateCode == 'US'),], t[which(t$StateCode == 'US'),])
t[!which(t$StateCode == 'US'),]
t
t[!which(t$StateCode == US),]
type(t$StateCode[0])
typeof(t$StateCode[0])
typeof(as.character(t$StateCode[0])
)
rbind(t[!which(as.character(t$StateCode) == 'US'),], t[which(as.character(t$StateCode) == 'US'),])
t[!which(as.character(t$StateCode) == 'US'),]
which(as.character(t$StateCode) == 'US')
which(!as.character(t$StateCode) == 'US')
typeof(which(!as.character(t$StateCode) == 'US'))
c(which(!as.character(t$StateCode) == 'US'))
typeof(c(which(!as.character(t$StateCode) == 'US')))
t
t[-grep("US", as.character(t$StateCode)),]
states.perc.change <- function(cons_frame, msn){
#hold the string list of states, DC, and US
states <- as.character(unique(cons_frame$StateCode))
#subset the MSN values of interest from the dataframe
msn_frame <- subset(cons_frame,grepl(msn, as.character(cons_frame$MSN)))
years <- msn_frame %>% distinct(Year)
#Create the string MSN-BaseYr-CompYr
comp <- paste(as.character(years[,1][1]), as.character(years[,1][2]), sep="-")
comp <- paste(msn, comp, sep="_")
#Get perc. change for each state
perc_change <- msn_frame %>% group_by(StateCode) %>% summarize(PercentChange = pct(Data))
#Get diff. for each state
change <- msn_frame %>% group_by(StateCode) %>% summarize(Change = diff(Data))
#Join together
perc_changes <- merge(perc_change, change)
#TODO- string together the MSN code before Base-Comp Years
#Will have some type of mapping which will extract the string from msn
rename(perc_changes, Location=StateCode)
perc_changes <- perc_changes %>% rowwise() %>% mutate(Comparison=comp)
#Move US to bottom of df for later use
#Possibly remove DC from data at later time
top = perc_changes[-grep("US", as.character(perc_changes$StateCode)),]
bottom = perc_changes[grep("US", as.character(perc_changes$StateCode)),]
perc_changes <- rbind(top, bottom)
return(perc_changes)
}
t = (states.perc.change(stc_comp, 'WYTCB'))
t
tail(t)
t
t2 <- t %>% filter(is.nan(PercentChange))
cat(t2$StateCode)
cat(as.character(t2$StateCode))
cat(as.character(t2$StateCode), sep=", ")
paste((t2$StateCode), sep=", ")
cat(as.character(t2$StateCode), sep=", ")
paste("The Following States have 0 Consumption in 1990 and 2015: ", cat(as.character(t2$StateCode), sep=", "))
cat("The Following States have 0 Consumption in 1990 and 2015: ", cat(as.character(t2$StateCode), sep=", "))
cat(print("The Following States have 0 Consumption in 1990 and 2015: "), cat(as.character(t2$StateCode), sep=", "))
cat(cat("The Following States have 0 Consumption in 1990 and 2015: "), cat(as.character(t2$StateCode), sep=", "))
t3 <- t %>% filter(!is.nan(PercChange), is.finite(PercChange))
t
t3 <- t %>% filter(!is.nan(PercentChange), is.finite(PercentChange))
t3
ggplot(t3, aes(x=StateCode, y = PercentChange)) + geom_point()
ggplot(t3, aes(x=StateCode, y = PercentChange)) + geom_bar()
ggplot(t3, aes(x=StateCode, y = PercentChange)) + geom_line()
ggplot(t3, aes(x=StateCode, y = PercentChange)) + geom_point()
ggplot(t3, aes(x=StateCode, y = PercentChange)) + geom_col()
t4 <- t %>% filter(!is.finite(PercentChange), !is.nan(PercentChange))
ggplot(t4, aes(x=StateCode, y = PercentChange)) + geom_col()
ggplot(t4, aes(x=StateCode, y = Change)) + geom_col()
ggplot(t4, aes(x=StateCode, y = log(Change)) + geom_col()
)
ggplot(t4, aes(x=StateCode, y = log10(Change)) + geom_col()
)
ggplot(t4, aes(x=StateCode, y = Change)) + geom_col()
test <- ggplot(t4, aes(x=StateCode, y = Change)) + geom_col()
test + scale_y_continuous(trans='log2')
logChange <- log10(t4$Change)
ggplot(t4, aes(x=StateCode, y = logChange)) + geom_col()
logChange <- log2(t4$Change)
ggplot(t4, aes(x=StateCode, y = logChange)) + geom_col()
ggplot(t3, aes(x=StateCode, y = PercentChange)) + geom_col()
library(tidyverse)
codes <- read.csv("/Users/Adam/usenergytrends/data/Codes_and_Descriptions.csv")
head(codes)
codes <- read.csv("/Users/Adam/usenergytrends/data/Codes_and_Descriptions.csv", skip =10)
head(codes)
View(codes)
codes <- read.csv("/Users/Adam/usenergytrends/data/Codes_and_Descriptions.csv", skip =9)
head(codes)
codes <- read.csv("/Users/Adam/usenergytrends/data/Codes_and_Descriptions.csv", skip =8)
head(codes)
codes <- read.csv("/Users/Adam/usenergytrends/data/Codes_and_Descriptions.csv", skip =5)
head(codes)
codes <- read.csv("/Users/Adam/usenergytrends/data/Codes_and_Descriptions.csv", skip =3)
head(codes)
View(codes)
codes <- read.csv("/Users/Adam/usenergytrends/data/Codes_and_Descriptions.csv", skip =9)
colnames(codes)
codes = codes["MSN", "Description", "Unit"]
head(codes)
codes = codes["MSN", "Description", "Unit"]
colnames(codes)
select(codes, MSN, Description, Unit)
colnames(select(codes, MSN, Description, Unit))
codes <- select(codes, MSN, Description, Unit)
head(codes)
codes <- codes[grepl("TC", codes$MSN),]
codes <- codes[grepl("B", codes$MSN),]
nrow(codes)
codes
View(codes)
codes <- read.csv("/Users/Adam/usenergytrends/data/Codes_and_Descriptions.csv", skip =9)
codes <- select(codes, MSN, Description, Unit)
codes <- codes[grepl("TC|TX", codes$MSN),]
codes <- codes[grepl("B", codes$MSN),] #34 codes to go through
nrow(codes)
View(codes)
codes[]
codes %>% filter(MSN == 'TETCB')
codes %>% filter(MSN == 'TETCB')['Description']
typeof(codes %>% filter(MSN == 'TETCB'))
typeof(codes %>% filter(MSN == 'TETCB'))[1]
(codes %>% filter(MSN == 'TETCB'))[1]
(codes %>% filter(MSN == 'TETCB'))[2]
print((codes %>% filter(MSN == 'TETCB'))[2])
print(as.character((codes %>% filter(MSN == 'TETCB'))[2]))
print((codes %>% filter(MSN == 'TETCB'))[2])
View(codes)
paste((codes %>% filter(MSN == 'TETCB'))[2])
(codes %>% filter(MSN == 'TETCB'))[2][0]
(codes %>% filter(MSN == 'TETCB'))[2][1]
(codes %>% filter(MSN == 'TETCB'))[2]$Description
(codes %>% filter(MSN == 'TETCB'))[2]$Description[0]
(codes %>% filter(MSN == 'TETCB'))[2]$Description[1]
paste((codes %>% filter(MSN == 'TETCB'))[2]$Description)
paste((codes %>% filter(MSN == 'TETCB'))$Description)
library(tidyverse)
codes
head(codes)
rownames(codes) <- NULL
head(codes)
tail(codes)
temp <- states.perc.change(stc_comp, 'WYTCB')
head(temp)
tail(temp)
head(stc_comp)
stc_comp <- stc_comp[stc_comp$StateCode != 'DC']
stc_comp <- stc_comp[,stc_comp$StateCode != 'DC']
stc_comp <- stc_comp[stc_comp$StateCode != 'DC',]
head(stc_comp)
unique(stc_comp$StateCode)
len(unique(stc_comp$StateCode))
nrow(unique(stc_comp$StateCode))
length(unique(stc_comp$StateCode))
stfc_comp <- stfc_comp[stfc_comp$StateCode != 'DC',]
length(unique(stfc_comp$StateCode))
states.change.plots(temp)
head(temp)
head(codes)
codes['TETCB',]
codes %>% filter(MSN = 'TETCB')
codes %>% filter(MSN == 'TETCB')
codes %>% filter(MSN == 'TETCB')$Description
codes %>% filter(MSN == 'TETCB')$Description[0]
codes %>% filter(MSN == 'TETCB')[1]
codes %>% filter(MSN == 'TETCB')
type(codes %>% filter(MSN == 'TETCB'))
typeof(codes %>% filter(MSN == 'TETCB'))
(codes %>% filter(MSN == 'TETCB'))[0]
(codes %>% filter(MSN == 'TETCB'))[1]
(codes %>% filter(MSN == 'TETCB'))[2]
typeof((codes %>% filter(MSN == 'TETCB'))[2])
(codes %>% filter(MSN == 'TETCB'))[2][1]
(codes %>% filter(MSN == 'TETCB'))[2][0]
(codes %>% filter(MSN == 'TETCB'))[2][2]
(codes %>% filter(MSN == 'TETCB'))[2][1]
(codes %>% filter(MSN == 'TETCB'))[2]
as.character((codes %>% filter(MSN == 'TETCB'))[2])
as.string((codes %>% filter(MSN == 'TETCB'))[2])
((codes %>% filter(MSN == 'TETCB'))[2]) + " "
paste('TETCB', (codes %>% filter(MSN == 'TETCB'))[2], sep="-")
(codes %>% filter(MSN == 'TETCB'))[2]
codes$Description[codes$MSN == 'TETCB']
states.perc.change <- function(cons_frame, msn){
#hold the string list of states and US
states <- as.character(unique(cons_frame$StateCode))
#subset the MSN values of interest from the dataframe
msn <- codes$Description[codes$MSN == msn]
msn_frame <- subset(cons_frame,grepl(msn, as.character(cons_frame$MSN)))
years <- msn_frame %>% distinct(Year)
#Create the string MSN-BaseYr-CompYr
comp <- paste(as.character(years[,1][1]), as.character(years[,1][2]), sep="-")
comp <- paste(msn, comp, sep="_")
#Get perc. change for each state
perc_change <- msn_frame %>% group_by(StateCode) %>% summarize(PercentChange = pct(Data))
#Get diff. for each state
change <- msn_frame %>% group_by(StateCode) %>% summarize(Change = diff(Data))
#Join together
perc_changes <- merge(perc_change, change)
#TODO- string together the MSN code before Base-Comp Years
#Will have some type of mapping which will extract the string from msn
rename(perc_changes, Location=StateCode)
perc_changes <- perc_changes %>% rowwise() %>% mutate(Comparison=comp)
#Move US to bottom of df for later use
top = perc_changes[-grep("US", as.character(perc_changes$StateCode)),]
bottom = perc_changes[grep("US", as.character(perc_changes$StateCode)),]
perc_changes <- rbind(top, bottom)
return(perc_changes)
}
temp <- states.perc.change(stc_comp, 'WYTCB')
head(temp)
temp
states.perc.change <- function(cons_frame, msn){
#hold the string list of states and US
states <- as.character(unique(cons_frame$StateCode))
#subset the MSN values of interest from the dataframe
msn_frame <- subset(cons_frame,grepl(msn, as.character(cons_frame$MSN)))
years <- msn_frame %>% distinct(Year)
#Create the string MSN-BaseYr-CompYr
comp <- paste(as.character(years[,1][1]), as.character(years[,1][2]), sep="-")
msn <- codes$Description[codes$MSN == msn]
comp <- paste(msn, comp, sep="_")
#Get perc. change for each state
perc_change <- msn_frame %>% group_by(StateCode) %>% summarize(PercentChange = pct(Data))
#Get diff. for each state
change <- msn_frame %>% group_by(StateCode) %>% summarize(Change = diff(Data))
#Join together
perc_changes <- merge(perc_change, change)
#TODO- string together the MSN code before Base-Comp Years
#Will have some type of mapping which will extract the string from msn
rename(perc_changes, Location=StateCode)
perc_changes <- perc_changes %>% rowwise() %>% mutate(Comparison=comp)
#Move US to bottom of df for later use
top = perc_changes[-grep("US", as.character(perc_changes$StateCode)),]
bottom = perc_changes[grep("US", as.character(perc_changes$StateCode)),]
perc_changes <- rbind(top, bottom)
return(perc_changes)
}
temp
temp <- states.perc.change(stc_comp, 'WYTCB')
head(temp)
states.perc.change <- function(cons_frame, msn){
#hold the string list of states and US
states <- as.character(unique(cons_frame$StateCode))
#subset the MSN values of interest from the dataframe
msn_frame <- subset(cons_frame,grepl(msn, as.character(cons_frame$MSN)))
years <- msn_frame %>% distinct(Year)
#Create the string MSN-BaseYr-CompYr
comp <- paste(as.character(years[,1][1]), as.character(years[,1][2]), sep="-")
msn <- codes$Description[codes$MSN == msn]
comp <- paste(msn, comp, sep=" ")
#Get perc. change for each state
perc_change <- msn_frame %>% group_by(StateCode) %>% summarize(PercentChange = pct(Data))
#Get diff. for each state
change <- msn_frame %>% group_by(StateCode) %>% summarize(Change = diff(Data))
#Join together
perc_changes <- merge(perc_change, change)
#TODO- string together the MSN code before Base-Comp Years
#Will have some type of mapping which will extract the string from msn
rename(perc_changes, Location=StateCode)
perc_changes <- perc_changes %>% rowwise() %>% mutate(Comparison=comp)
#Move US to bottom of df for later use
top = perc_changes[-grep("US", as.character(perc_changes$StateCode)),]
bottom = perc_changes[grep("US", as.character(perc_changes$StateCode)),]
perc_changes <- rbind(top, bottom)
return(perc_changes)
}
temp <- states.perc.change(stc_comp, 'WYTCB')
head(temp)
temp
head(temp)
t1 <- temp %>% filter(!is.finite(PercentChange), !is.nan(PercentChange))
t1
t2 <- temp %>% filter(is.nan(PercentChange))
t2
t3 <- temp %>% filter(!is.nan(PercentChange), is.finite(PercentChange))
t3
t1
t1 <- temp %>% filter(!is.nan(PercentChange))
t1
t2
which(is.finite(t1$PercentChange))
typeof(which(is.finite(t1$PercentChange)))
c(which(is.finite(t1$PercentChange)))
typeof(c(which(is.finite(t1$PercentChange))))
t1[which(is.finite(t1$PercentChange)), t1$PercentChange]
t1[t1$PercentChange, which(is.finite(t1$PercentChange))]
t1[which(is.finite(t1$PercentChange))]
t1[which(is.finite(t1$PercentChange)),]
t1[which(is.finite(t1$PercentChange)),]$PercentChange
states.change.plots <- function(change_frame){
changers <- change_frame %>% filter(!is.nan(PercentChange))
zero_nochange <- change_frame %>% filter(is.nan(PercentChange))
movers_x <- which(is.finite(changers$PercentChange))
movers_y <- changers[movers_x,]$PercentChange
#Print out the list of states w/ 0 cons. in base and comp. year
cat(cat("The Following States have 0 Consumption in 1990 and 2015: "),
cat(as.character(t2$StateCode), sep=", "))
logChange = log2(changers$Change)
ggplot(changers, aes(x=StateCode, y = logChange)) + geom_col()
}
states.change.plots(temp)
tail(temp)
head(temp)
library(tidyverse)
last('TX')
last(strsplit('TX'))
last(strsplit('TX'), split ="")
last(strsplit('TX'), split ="T")
last(strsplit('CTX'), split ="T")
last(strsplit('CTX', split ="T"))
last(strsplit('TX', split =""))
last(10:1)
10:1
strsplit('TX',split="")
last(strsplit('TX', split ="")[1])
last(strsplit('TX', split ="")[2])
last(strsplit('TX', split ="")[1])
strsplit('TX',split="")[1]
strsplit('TX',split="")[1][2]
strsplit('TX',split="")[1][1]
library(stringr)
str_sub("TX", n=-1)
str_sub("TX", start=-1)
unique(stc_comp$MSN)
codes$Description[codes$MSN == 'TETCB']
unique(stfc_comp$MSN)
stc_comp$MSN == 'TETCB'
stc_comp[stc_comp$MSN == 'TETCB,]
stc_comp$Data[stc_comp$MSN == 'TETCB']
stc_comp[stc_comp$MSN == 'TETCB']
stc_comp[stc_comp$MSN == 'TETCB',]
str_sub(stc_comp$MSN, 1, 3)
stc_cons[str_sub(stc_comp$MSN, 1, 3),]
stc_comp[str_sub(stc_comp$MSN, 1, 3),]
stc_comp[str_sub(stc_comp$MSN, 1, 3) == "TET",]
normalize <- stc_comp[str_sub(stc_comp$MSN, 1, 3) == "TET",]
normalize <- normalize %>% group_by(StateCode) %>% summarize(Change = diff(Data))
normalize
debugSource('~/usenergytrends/workbooks/consumption/consumption.R')
states.perc.change(temp)
debugSource('~/usenergytrends/workbooks/consumption/consumption.R')
states.perc.change(temp)
states.perc.change(temp)
states.perc.change(temp)
debugSource('~/usenergytrends/workbooks/consumption/consumption.R')
states.perc.change(temp)
temp
states.perc.change(stc_comp, 'ARTCB')
normalize
msn_frame
msn_frame %>% group_by(StateCode) %>% summarize(Change = diff(Data)/normalize)
msn_frame %>% group_by(StateCode) %>% summarize(Change = diff(Data))
change <- msn_frame %>% group_by(StateCode) %>% summarize(Change = diff(Data))
change/normalize
change$Change/normalize$Change
